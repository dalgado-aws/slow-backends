apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: nginx-proxy-template
  annotations:
    description: "Template for creating an Nginx proxy pod to www.nytimes.com (non-root)"
    tags: "nginx,proxy,non-root"

objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: nginx-proxy-config
  data:
    nginx.conf: |
      worker_processes 1;
      error_log /tmp/error.log;
      pid /tmp/nginx.pid;
      events {
        worker_connections 1024;
      }
      http {

        log_format detailed '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'TARGET_URL="$scheme://$host$request_uri"';


        # Global proxy settings - apply to all locations
        proxy_connect_timeout 600s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;
        proxy_next_upstream_timeout 600s;

        # Increase buffer size for headers
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        # Increase max body size
        client_max_body_size       10m;

        # Handle slow clients
        client_body_timeout        600s;
        client_header_timeout      600s;
        keepalive_timeout          600s;
        send_timeout               600s;
        access_log /dev/stdout detailed;

        client_body_temp_path /tmp/client_temp;
        proxy_temp_path /tmp/proxy_temp;
        fastcgi_temp_path /tmp/fastcgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;
        scgi_temp_path /tmp/scgi_temp;
        
        server {
          listen 8080;
          server_name localhost;
          
          location / {
            proxy_pass http://${FLASK_HOST};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }
        }
      }

- apiVersion: v1
  kind: Pod
  metadata:
    name: ${POD_NAME}
    labels:
      app: ${APP}
      pod-selector: njinx
  spec:
    containers:
    - name: nginx
      image: nginx:latest
      ports:
      - containerPort: 8080
        protocol: TCP
      volumeMounts:
      - name: nginx-config
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
      - name: nginx-temp
        mountPath: /tmp
      resources:
        limits:
          memory: ${MEMORY_LIMIT}
          cpu: ${CPU_LIMIT}
        requests:
          memory: ${MEMORY_REQUEST}
          cpu: ${CPU_REQUEST}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
    volumes:
    - name: nginx-config
      configMap:
        name: nginx-proxy-config
    - name: nginx-temp
      emptyDir: {}
    restartPolicy: Always

# service for njinx app
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP}-njinx-service
    labels: 
      app: ${APP}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP}
      pod-selector: njinx
    sessionAffinity: None
    type: ClusterIP

  # route for njinx app
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APP}-njinx-route
    labels:
      app: ${APP}
    annotations:
      haproxy.router.openshift.io/timeout: "10m"
  spec:
    path: /
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APP}-njinx-service
      weight: 100
    wildcardPolicy: None


parameters:
- name: POD_NAME
  description: Name of the pod
  value: nginx-proxy-pod
  required: true
- name: MEMORY_LIMIT
  description: Memory limit for the container
  value: 256Mi
  required: true
- name: CPU_LIMIT
  description: CPU limit for the container
  value: 500m
  required: true
- name: MEMORY_REQUEST
  description: Memory request for the container
  value: 128Mi
  required: true
- name: CPU_REQUEST
  description: CPU request for the container
  value: 100m
  required: true
- name: APP
  description: app
  value: apache-template-param-value
- name: FLASK_HOST
  description: FLASK_HOST
  value: flask-route-param-value
